spring:
  application:
    name: basic-mgmt-system

  # 数据源配置
  datasource:
    url: jdbc:mysql://localhost:3306/mgmt_db?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai
    username: ${DB_USERNAME:mgmt_user}
    password: ${DB_PASSWORD:mgmt_password}
    driver-class-name: com.mysql.cj.jdbc.Driver

    # HikariCP 连接池配置
    hikari:
      pool-name: HikariCP
      maximum-pool-size: 10
      minimum-idle: 5
      connection-timeout: 20000
      idle-timeout: 300000
      max-lifetime: 1200000

  # JPA配置
  jpa:
    hibernate:
      ddl-auto: update  # 保持数据持久性，自动更新表结构
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        format_sql: true
        use_sql_comments: true
    open-in-view: false

  # 开启JPA审计
  data:
    jpa:
      repositories:
        bootstrap-mode: deferred
    # Redis配置
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      database: ${REDIS_DATABASE:0}
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
          max-wait: -1ms

  # 文件上传配置
  servlet:
    multipart:
      max-file-size: 20MB
      max-request-size: 25MB
      enabled: true

  # Jackson配置
  jackson:
    serialization:
      write-dates-as-timestamps: false
    deserialization:
      adjust-dates-to-context-time-zone: false
    time-zone: Asia/Shanghai
    date-format: yyyy-MM-dd HH:mm:ss
    default-property-inclusion: non_null

# Elasticsearch配置
elasticsearch:
  uris:
    - ${ELASTICSEARCH_URI:http://localhost:9200}
  username: ${ELASTICSEARCH_USERNAME:}
  password: ${ELASTICSEARCH_PASSWORD:}
  api-key: ${ELASTICSEARCH_API_KEY:}
  connection-timeout: 30s
  read-timeout: 30s
  ssl-enabled: ${ELASTICSEARCH_SSL_ENABLED:false}
  ssl-fingerprint: ${ELASTICSEARCH_SSL_FINGERPRINT:}
  index:
    default-settings:
      number-of-shards: ${ELASTICSEARCH_DEFAULT_SHARDS:1}
      number-of-replicas: ${ELASTICSEARCH_DEFAULT_REPLICAS:0}
      refresh-interval: 1s

# Actuator健康检查配置
management:
  endpoints:
    web:
      exposure:
        include: health,info
  endpoint:
    health:
      show-details: when_authorized

# 日志配置
logging:
  level:
    com.ynet.mgmt: DEBUG
    com.ynet.mgmt.jsonimport: DEBUG  # JSON导入服务详细日志
    com.ynet.mgmt.searchspace.service: DEBUG  # 搜索空间服务日志
    co.elastic.clients: DEBUG  # Elasticsearch客户端日志
    org.elasticsearch: DEBUG  # Elasticsearch相关日志
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    org.springframework.data.jpa: DEBUG
  file:
    # 输出日志到指定文件
    name: /Users/zhailiang/Documents/code/deepSearch/backend/logs/application.log
  pattern:
    # 控制台日志格式
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} %5p %pid --- [%15.15t] %-40.40logger{39} : %m%n"
    # 文件日志格式
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
  logback:
    rollingpolicy:
      # 日志文件滚动策略
      max-file-size: 10MB
      max-history: 30
      total-size-cap: 1GB

# 服务器配置
server:
  port: 8080
  servlet:
    context-path: /api
  # Tomcat连接超时配置
  tomcat:
    connection-timeout: 300000  # 5分钟连接超时
    keep-alive-timeout: 300000  # 5分钟保活超时
    max-keep-alive-requests: 100
  # 压缩配置
  compression:
    enabled: true
    mime-types: text/html,text/css,text/plain,text/xml,application/json,application/javascript
    min-response-size: 1024

# JWT配置
jwt:
  secret: ${JWT_SECRET:your-very-secure-secret-key-here-at-least-256-bits-long-for-hs256-algorithm}
  access-token-expiration: 36000000  # 1 hour in milliseconds
  refresh-token-expiration: 2592000000  # 30 days in milliseconds
  issuer: deepSearch
  audience: deepSearch-users
  algorithm: HS256

# 应用自定义配置
app:
  import:
    temp-dir: ${TEMP_DIR:${java.io.tmpdir}/deepsearch/imports}
    file-expiry-hours: ${FILE_EXPIRY_HOURS:24}
    max-file-size: 20971520  # 20MB in bytes
    allowed-extensions: json
    # 数据导入服务超时配置
    timeout:
      sync-import: ${IMPORT_SYNC_TIMEOUT:300000}  # 同步导入超时: 5分钟
      async-import: ${IMPORT_ASYNC_TIMEOUT:1800000}  # 异步导入超时: 30分钟
    # 批处理配置
    batch:
      default-size: ${IMPORT_DEFAULT_BATCH_SIZE:100}  # 默认批次大小：100（更保守）
      max-size: ${IMPORT_MAX_BATCH_SIZE:500}  # 最大批次大小：500
      min-size: ${IMPORT_MIN_BATCH_SIZE:10}   # 最小批次大小：10
      max-memory-per-batch: ${IMPORT_MAX_MEMORY_PER_BATCH:52428800}  # 单批次最大内存：50MB

  # 缓存配置
  cache:
    default-ttl: ${CACHE_DEFAULT_TTL:PT1M}  # 默认缓存1分钟
    hot-words-ttl: ${CACHE_HOT_WORDS_TTL:PT1M}  # 热词缓存1分钟
    statistics-ttl: ${CACHE_STATISTICS_TTL:PT1M}  # 统计数据缓存1分钟
    search-spaces-ttl: ${CACHE_SEARCH_SPACES_TTL:PT1M}  # 搜索空间缓存1分钟

# 搜索日志配置
search:
  log:
    enabled: ${SEARCH_LOG_ENABLED:true}
    async:
      core-pool-size: ${SEARCH_LOG_CORE_POOL_SIZE:2}
      max-pool-size: ${SEARCH_LOG_MAX_POOL_SIZE:5}
      queue-capacity: ${SEARCH_LOG_QUEUE_CAPACITY:100}
      thread-name-prefix: "SearchLog-"
    retention:
      days: ${SEARCH_LOG_RETENTION_DAYS:30}
      auto-cleanup: ${SEARCH_LOG_AUTO_CLEANUP:true}
      cleanup-cron: ${SEARCH_LOG_CLEANUP_CRON:0 0 2 * * ?}
    performance:
      record-detail-response: ${SEARCH_LOG_RECORD_DETAIL:true}
      max-response-length: ${SEARCH_LOG_MAX_RESPONSE_LENGTH:10000}
      record-request-headers: ${SEARCH_LOG_RECORD_HEADERS:false}
      timeout-threshold-ms: ${SEARCH_LOG_TIMEOUT_THRESHOLD:30000}

  weight:
    # 字段权重配置 - 基于字段名称的boost值
    field:
      title: 1.2        # 标题类字段权重
      name: 1.2         # 名称类字段权重
      content: 1.0      # 内容类字段权重
      text: 1.0         # 文本类字段权重
      category: 1.0     # 类型分类字段权重
      default-weight: 1.0  # 默认字段权重
      keyword: 0.8      # keyword子字段权重

    # 多字段搜索权重配置 - buildMultiFieldQuery 方法中的权重
    multi-field:
      phrase-match: 1.2      # 完全短语匹配权重倍数
      all-words-match: 1.1   # 所有词都匹配权重倍数
      any-word-match: 1.0    # 任意词匹配权重倍数

    # 拼音搜索权重配置 - 不同拼音模式下的权重
    pinyin:
      # STRICT 模式权重
      strict-keyword: 1.0
      strict-pinyin: 0.8
      strict-first-letter: 0.5

      # FUZZY 模式权重
      fuzzy-keyword: 1.0
      fuzzy-pinyin: 0.8
      fuzzy-first-letter: 0.6

      # AUTO 模式权重
      auto-keyword: 1.0
      auto-pinyin: 0.8
      auto-first-letter: 0.6

      # 拼音字段权重
      pinyin-field: 1.2
      chinese-pinyin-field: 1.0
      first-letter-field: 1.0

# 语义搜索配置
semantic:
  # 语义搜索权重（0.0-1.0），剩余权重分配给关键词搜索
  search:
    weight: 0.3

  embedding:
    # 嵌入服务提供商: siliconflow(远程) 或 local(本地)，默认使用siliconflow
    provider: ${SEMANTIC_EMBEDDING_PROVIDER:siliconflow}
    # 是否启用语义搜索
    enabled: ${SEMANTIC_EMBEDDING_ENABLED:true}
    # 通用超时配置
    timeout: ${SEMANTIC_EMBEDDING_TIMEOUT:60000}
    # 缓存配置
    cache:
      expire:
        hours: ${SEMANTIC_EMBEDDING_CACHE_EXPIRE_HOURS:24}
      max:
        size: ${SEMANTIC_EMBEDDING_CACHE_MAX_SIZE:1000}

    # 硅基流动嵌入服务配置
    siliconflow:
      api-key: ${SILICONFLOW_API_KEY:sk-iiqrscvxpnomsjmissalpxylgwbmoszzoawkgtowyuqirejb}
      api-url: ${SILICONFLOW_API_URL:https://api.siliconflow.cn/v1/embeddings}
      model: ${SILICONFLOW_MODEL:BAAI/bge-large-zh-v1.5}
      dimension: ${SILICONFLOW_DIMENSION:1024}

    # 本地嵌入服务配置
    local:
      service:
        url: ${LOCAL_EMBEDDING_SERVICE_URL:http://localhost:8001}
      model: ${LOCAL_EMBEDDING_MODEL:paraphrase-multilingual-MiniLM-L12-v2}
      dimension: ${LOCAL_EMBEDDING_DIMENSION:384}

# 硅基流动 Vision API 配置
siliconflow:
  vision:
    # API 基础配置
    api-key: ${SILICONFLOW_API_KEY:sk-iiqrscvxpnomsjmissalpxylgwbmoszzoawkgtowyuqirejb}
    api-url: ${SILICONFLOW_VISION_API_URL:https://api.siliconflow.cn/v1/chat/completions}
    model: ${SILICONFLOW_VISION_MODEL:Qwen/QVQ-72B-Preview}

    # 模型参数配置
    temperature: ${SILICONFLOW_VISION_TEMPERATURE:0.1}
    max-tokens: ${SILICONFLOW_VISION_MAX_TOKENS:2048}
    top-p: ${SILICONFLOW_VISION_TOP_P:0.8}
    stream: ${SILICONFLOW_VISION_STREAM:false}

    # 超时配置
    timeout: ${SILICONFLOW_VISION_TIMEOUT:300000}

    # 图片处理配置
    image:
      max-file-size: ${SILICONFLOW_VISION_MAX_FILE_SIZE:10485760}  # 10MB
      supported-formats: ${SILICONFLOW_VISION_SUPPORTED_FORMATS:jpg,jpeg,png}
      max-width: ${SILICONFLOW_VISION_MAX_WIDTH:3584}
      max-height: ${SILICONFLOW_VISION_MAX_HEIGHT:3584}
      min-width: ${SILICONFLOW_VISION_MIN_WIDTH:56}
      min-height: ${SILICONFLOW_VISION_MIN_HEIGHT:56}

# 敏感词检测配置
sensitive-word:
  check:
    # 是否启用敏感词检测，默认启用
    enabled: ${SENSITIVE_WORD_CHECK_ENABLED:true}
  cache:
    # 缓存刷新间隔（毫秒），默认5分钟
    refresh-interval: ${SENSITIVE_WORD_CACHE_REFRESH_INTERVAL:300000}

# 重排序配置
rerank:
  # 重排序提供商: siliconflow(远程) 或 local(本地)
  provider: ${RERANK_PROVIDER:siliconflow}
  # 是否启用重排序
  enabled: ${RERANK_ENABLED:true}

  # 硅基流动重排序服务配置
  siliconflow:
    api-key: ${SILICONFLOW_API_KEY:sk-iiqrscvxpnomsjmissalpxylgwbmoszzoawkgtowyuqirejb}
    model: ${SILICONFLOW_RERANK_MODEL:BAAI/bge-reranker-v2-m3}
    timeout: ${SILICONFLOW_RERANK_TIMEOUT:5000}
    default-top-n: ${SILICONFLOW_RERANK_DEFAULT_TOP_N:50}
    return-documents: ${SILICONFLOW_RERANK_RETURN_DOCUMENTS:true}

# 聚类分析配置
cluster:
  # Python 聚类服务配置
  python:
    service-url: ${PYTHON_CLUSTER_URL:http://localhost:5001/cluster}
    timeout: ${PYTHON_CLUSTER_TIMEOUT:300000}  # 5分钟超时
    max-texts: ${PYTHON_CLUSTER_MAX_TEXTS:10000}  # 最大处理文本数

  # 硅基流动聚类分析配置
  siliconflow:
    # Embedding API 配置
    embedding:
      api-key: ${SILICONFLOW_CLUSTER_EMBEDDING_API_KEY:sk-iiqrscvxpnomsjmissalpxylgwbmoszzoawkgtowyuqirejb}
      api-url: ${SILICONFLOW_CLUSTER_EMBEDDING_API_URL:https://api.siliconflow.cn/v1/embeddings}
      model: ${SILICONFLOW_CLUSTER_EMBEDDING_MODEL:BAAI/bge-large-zh-v1.5}
      timeout: ${SILICONFLOW_CLUSTER_EMBEDDING_TIMEOUT:60000}

    # LLM API 配置
    llm:
      api-key: ${SILICONFLOW_CLUSTER_LLM_API_KEY:sk-iiqrscvxpnomsjmissalpxylgwbmoszzoawkgtowyuqirejb}
      api-url: ${SILICONFLOW_CLUSTER_LLM_API_URL:https://api.siliconflow.cn/v1/chat/completions}
      model: ${SILICONFLOW_CLUSTER_LLM_MODEL:Qwen/Qwen2.5-7B-Instruct}
      temperature: ${SILICONFLOW_CLUSTER_LLM_TEMPERATURE:0.3}
      max-tokens: ${SILICONFLOW_CLUSTER_LLM_MAX_TOKENS:500}
      timeout: ${SILICONFLOW_CLUSTER_LLM_TIMEOUT:30000}
# 查询理解管道配置
query-understanding:
  # 是否启用查询理解管道
  enabled: ${QUERY_UNDERSTANDING_ENABLED:true}

  # 管道超时配置（毫秒）
  timeout:
    total: ${QUERY_UNDERSTANDING_TOTAL_TIMEOUT:5000}  # 总超时 5秒
    processor: ${QUERY_UNDERSTANDING_PROCESSOR_TIMEOUT:1000}  # 单个处理器超时 1秒

  # 智能跳过策略
  smart-skip:
    enabled: ${QUERY_UNDERSTANDING_SMART_SKIP:true}
    simple-query-threshold: ${QUERY_UNDERSTANDING_SIMPLE_THRESHOLD:2}  # 少于2个字符跳过复杂处理

  # 缓存配置
  cache:
    enabled: ${QUERY_UNDERSTANDING_CACHE_ENABLED:true}  # 默认启用缓存
    ttl:
      query-context: ${QUERY_UNDERSTANDING_CACHE_TTL:PT10M}  # 查询上下文缓存10分钟
      llm-result: ${QUERY_UNDERSTANDING_LLM_CACHE_TTL:PT1H}  # LLM结果缓存1小时
      synonym: ${QUERY_UNDERSTANDING_SYNONYM_CACHE_TTL:PT24H}  # 同义词缓存24小时

  # Embedding配置
  embedding:
    enabled: ${QUERY_UNDERSTANDING_EMBEDDING_ENABLED:true}  # 启用Embedding功能
    siliconflow:
      api-key: ${SILICONFLOW_API_KEY:sk-iiqrscvxpnomsjmissalpxylgwbmoszzoawkgtowyuqirejb}
      api-url: ${QUERY_UNDERSTANDING_EMBEDDING_API_URL:https://api.siliconflow.cn/v1/embeddings}
      model: ${QUERY_UNDERSTANDING_EMBEDDING_MODEL:BAAI/bge-large-zh-v1.5}
      timeout: ${QUERY_UNDERSTANDING_EMBEDDING_TIMEOUT:10000}

  # LLM增强配置
  llm:
    enabled: ${QUERY_UNDERSTANDING_LLM_ENABLED:true}  # 启用LLM功能
    siliconflow:
      api-key: ${SILICONFLOW_API_KEY:sk-iiqrscvxpnomsjmissalpxylgwbmoszzoawkgtowyuqirejb}
      api-url: ${QUERY_UNDERSTANDING_LLM_API_URL:https://api.siliconflow.cn/v1/chat/completions}
      model: ${QUERY_UNDERSTANDING_LLM_MODEL:Qwen/Qwen2.5-7B-Instruct}
      temperature: ${QUERY_UNDERSTANDING_LLM_TEMPERATURE:0.3}
      max-tokens: ${QUERY_UNDERSTANDING_LLM_MAX_TOKENS:500}
      top-p: ${QUERY_UNDERSTANDING_LLM_TOP_P:0.9}
      timeout: ${QUERY_UNDERSTANDING_LLM_TIMEOUT:5000}
